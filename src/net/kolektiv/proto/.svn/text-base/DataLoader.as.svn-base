package net.kolektiv.proto {	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.net.URLLoader;	import flash.net.URLRequest;		import net.kolektiv.utils.Debug;		public class DataLoader extends EventDispatcher {		public static const READY:String = "ready";		public static const XML_URL:String = "data.xml";		private var callback:Function;		public var data:XML;		public function get xml():XML {			return data;		}		public function DataLoader() {			Debug.info( "new", this );		}		public function loadData( x:XML ):void {			Debug.info( this, ".loadData()" );			//Debug.say("loading xml data:\n------------------------------------------------------------------------\n"+x,"\n----------------------------------------------------------------------");			data = x;			dispatchEvent( new Event( READY ) );		}		public function loadXML( url:String = XML_URL ):void {			Debug.info( this, ".loadXML(", url, ")" );			var url_loader:URLLoader = new URLLoader();			url_loader.addEventListener( Event.COMPLETE, onXMLLoaded );			url_loader.load( new URLRequest( url ) );			return;		}		override public function toString():String {			return "[DataLoader]";		}		protected function onXMLLoaded( e:Event = null ):void {			Debug.event( this, ".onXMLLoaded()" );			loadData( new XML( e.target.data ) );			return;		}	}}