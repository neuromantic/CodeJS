{"ts":1358746233700,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*!\n *\n * Tween.js\n * com.fasejs.fs.transitions.Tween\n *\n * https://github.com/neuromantic/CodeJS/\n *\n * Copyright 2011, Neuromantic Industries & For Sure, Rad!\n * Licensed under the MIT license.\n *\n */\n_package( 'com.fasejs.fs.transitions',\n// \n \t_import( 'com.fasejs.util.Timer' ),\n \t_import( 'com.fasejs.fs.transitions.Easing' ),\n \t_import( 'com.fasejs.fs.events.TweenEvent' ),\n \t\n\t_class( 'Tween' )._extends( 'Timer', {\n\t\tstatic_SPECIAL_PROPERTIES : [ 'delay', 'onStart', 'onUpdate', 'onComplete', 'onStop', 'scope' ],\n\t\tstatic_frameRate : 100,\n\t\tstatic_defaultEasing : Easing.easeInOutQuad,\n\t\t\n\t\tprivate_toProperties : null,\n\t\tprivate_tweenDuration : 0,\n\t\tprivate_startTime : 0,\n\t\tprivate_context : null,\n\t\tprivate_easing : null,\n\t\t\n\t\tstatic_to : function( target, duration, properties ) {\n// // _debug( 'Tween.to', target, duration, properties );\n\t\t\tvar tween = new Tween( target, duration, properties );\n\t\t},\n\t\tstatic_delayedCall : function( delay, toCall, scope ) {\n\t\t\tvar tween = new Tween( 'delayedCall' , 0, { delay : delay, onComplete : toCall, scope : scope } );\n\t\t},\n\t\tstatic_delta : function( target, duration, properties ) {\n\t\t\tvar deltaProperties = {};\n\t\t\tfor ( var propertyName in properties ) {\n\t\t\t\tif( Tween.SPECIAL_PROPERTIES.indexOf( propertyName ) < 0 ){\n\t\t\t\t\tdeltaProperties[ propertyName ] = Number( target._get( propertyName ) + properties[ propertyName ]);\n\t\t\t\t}else{\n\t\t\t\t\tdeltaProperties[ propertyName ] = properties[ propertyName ];\n\t\t\t\t};\n\t\t\t};\n\t\t\tvar tween = new Tween( target, duration, deltaProperties );\n\t\t},\n\t\tstatic_from : function( target, duration, properties ) {\n\t\t\tvar originalProperties = {};\n\t\t\tfor ( var propertyName in properties ) {\n\t\t\t\t\toriginalProperties[ propertyName ] = target._get( propertyName );\n\t\t\t\tif( Tween.SPECIAL_PROPERTIES.indexOf( propertyName ) < 0 ){\n\t\t\t\t\ttarget._set( propertyName , properties[ propertyName ] );\n\t\t\t\t}else{\n\t\t\t\t\toriginalProperties[ propertyName ] = properties[ propertyName ];\n\t\t\t\t};\n\t\t\t};\n\t\t\tvar tween = new Tween( target, duration, originalProperties );\n\t\t},\n\t\tTween : function( target, duration, properties ) {\n\t\t\tthis._super( 1000 / Tween.frameRate );\n\t\t\tthis.addEventListener( TimerEvent.TIMER, this._.timerHandler );\n\t\t\tthis._.target = target;\n\t\t\tthis._.tweenDuration = duration;\n\t\t\tthis._.toProperties = properties;\n\t\t\tthis._.easing = properties.easing || Tween.defaultEasing;\n\t\t\tthis._.fromProperties = {};\n\t\t\tthis._.scope = properties.scope || this;\n\t\t\t\n\t\t\tif( properties.onComplete ) {\n\t\t\t\t\tthis.addEventListener( TweenEvent.COMPLETE, properties.onComplete, this._.scope );\n\t\t\t};\n\t\t\t if( properties.onStart ) {\n\t\t\t\t\tthis.addEventListener( TweenEvent.START, properties.onStart, this._.scope );\n\t\t\t };\n\t\t\t  if( properties.onUpdate ) {\n\t\t\t\t\tthis.addEventListener( TweenEvent.UPDATE, properties.onUpdate, this._.scope ); \n\t\t\t\t  // delete this.toProperties.onUpdate ;\n\t\t\t  };\n\t\t\t  if( properties.delay ) {\n\t\t\t\t  this._.delayTimer = new Timer( properties.delay * 1000, 1 );\n\t\t\t\t  this._.delayTimer.addEventListener( TimerEvent.COMPLETE, this.startTween, this );\n\t\t\t\t  this._.delayTimer.start();\n\t\t\t\t  delete properties.delay;\n\t\t\t  }else{\n\t\t\t\t  this.startTween();\n\t\t\t  };\n\t\t\t\n\t\t},\n\t \tprivate_currentTime : function () {\n\t\t  // var seconds = seconds\n\t\t\t  return Date.now() * 0.001;\n\t  \t},\n\t\tprivate_elapsedTime : function () {\n\t\t\t  return this._.currentTime() - this._.startTime;\n\t\t},\n\t  \tkill : function ( finish ) {\n\t\t  if( this._.delayTimer ){\n\t\t\t  this._.delayTimer.stop();\n\t\t\t  this._.delayTimer = null;\n\t\t  }\n\t\t  this.stopTween( finish )\n\t\t },\n\t\t\n\t  \tprivate_delayTimer : null,\n\t  \tprivate_timerHandler : function( event ){\n\t\t\tevent.target.updateTween();\n\t\t},\n  \t\tstartTween : function () {\n  // _debug( 'starting tween of', this._.target );\n\t\t\t\t  this._dispatchEvent( new TweenEvent( TweenEvent.START , this ) );\n\t\t\t\t  this._.startTime = this._.currentTime();\n\t\t\t\t  for ( var propertyName in this._.toProperties ) {\n\t\t\t\t\t  if( Tween.SPECIAL_PROPERTIES.indexOf( propertyName ) < 0 ){\n\t\t\t\t\t\t  this._.fromProperties[ propertyName ] = this._.target._get( propertyName );\n  // _debug( this._.target, propertyName, ':', this._.fromProperties[ propertyName ], '-->', this._.toProperties[ propertyName ], 'over',this._.tweenDuration,'s' );\n\t\t\t\t\t  }\n\t\t\t\t  };\n\t\t\t\t  if ( this.tweenDuration === 0 ) {\n\t\t\t\t\t  this.updateTween();\n\t\t\t\t  }\n\t\t\t\t  this.start();\n\t\t\t  },\n\t\t\t  updateTween : function () {\n  // _debug( 'updating tween of', this._.target );\n\t\t\t  this._dispatchEvent( new TweenEvent( TweenEvent.UPDATING , this ) );\n\t\t\t  var previousValues  = {};\n\t\t\t  for ( var propertyName in this._.toProperties ) { //all equations use this signature  t: current time, b: beginning value, c: change in value, d: duration\n\t\t\t\t\t  if( Tween.SPECIAL_PROPERTIES.indexOf( propertyName ) < 0 ){\n\t\t\t\t\t\t  var newValue = this._.easing( this._.elapsedTime(), this._.fromProperties[ propertyName ], this._.toProperties[ propertyName ] - this._.fromProperties[ propertyName ], this._.tweenDuration );\n\t\t\t\t\t\t  previousValues[ propertyName ] = this._.target._get(propertyName);\n\t\t\t\t\t\t  this._.target._set( propertyName , newValue );\n  // _debug( String( this._.elapsedTime() ).substr(0,5),'s', this._.target, propertyName, ':',previousValues[ propertyName ], '-->', this._.target._get( propertyName ) );\n\t\t\t\t\t  }\n\t\t\t\t  };\n\t\t\t\t  this._dispatchEvent( new TweenEvent( TweenEvent.UPDATE , this, previousValues ) );\n\t\t\t\t  if( this._.elapsedTime() >= this._.tweenDuration ) {\n\t\t\t\t\t  return this.stopTween( true );\n\t\t\t\t  };\n\t\t\t  },\n\t\t\t  stopTween : function ( finish ) {\n  // _debug( 'stopping tween of', this._.target );\n\t\t\t  if( finish ) {\n\t\t\t\t  for( var propertyName in this._.toProperties ) {\n\t\t\t\t\t  if( Tween.SPECIAL_PROPERTIES.indexOf( propertyName ) < 0 ){\n\t\t\t\t\t\t  this._.target._set( propertyName , this._.toProperties[ propertyName ] );\n\t\t\t\t\t  }\n\t\t\t\t  };\n\t\t\t  };\n\t\t\t  this._dispatchEvent( new TweenEvent( TweenEvent.COMPLETE , this ) );\n\t\t\t  this.stop();\n\t\t  }//,\n\t})\n);\n\n\t\t\t\n\t\t\t\n\t\t"]],"start1":0,"start2":0,"length1":0,"length2":5939}]],"length":5939}
